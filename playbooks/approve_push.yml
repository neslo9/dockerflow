---
- name: Tag, push and log approved Docker image
  hosts: localhost
  connection: local
  become: yes

  vars:
    harbor_url: "192.168.122.100"
    project: "project"
    image_name: "test_app1"
    local_tag: "latest"
    full_image: "{{ image_name }}:{{ local_tag }}"
    status: "approved"
    backup_dir: "/home/hypervisoradmin/project/my-repo/image_backups"
    log_file: "/var/log/dockerflow/history.csv"
    timestamp: "{{ lookup('pipe', 'date +%Y%m%d%H%M%S') }}"

  tasks:

    - name: Get image ID of local image
      command: docker images -q {{ full_image }}
      register: image_id_result
      changed_when: false

    - name: Fail if image not found
      fail:
        msg: "Image {{ full_image }} not found locally."
      when: image_id_result.stdout == ""

    - name: Set image_id fact
      set_fact:
        image_id: "{{ image_id_result.stdout }}"

    - name: Get existing version tags for this image
      shell: |
        docker images --format '{{ "{{.Repository}}:{{.Tag}}" }}' \
        | grep -E "^{{ harbor_url }}/{{ project }}/{{ image_name }}:v[0-9]+$" || true
      register: version_tag_lines
      changed_when: false

    - name: Extract version numbers from tags
      set_fact:
        version_numbers: >-
          {{
            version_tag_lines.stdout_lines | default([]) |
            map('regex_replace', '^.*:v([0-9]+)$', '\1') |
            map('int') | list
          }}

    - name: Compute max_version (0 if none exist)
      set_fact:
        max_version: "{{ (version_numbers | max if version_numbers | length > 0 else 0) | int }}"

    - name: Compute next_version
      set_fact:
        next_version: "{{ (max_version | int) + 1 }}"

    - name: Set tag_name and remote_tag
      set_fact:
        tag_name: "v{{ next_version }}"
        remote_tag: "{{ harbor_url }}/{{ project }}/{{ image_name }}:v{{ next_version }}"

    - name: Debug final tag
      debug:
        msg: "Tagging image '{{ full_image }}' as '{{ remote_tag }}' (next_version={{ next_version }})"

    - name: Tag image if approved
      command: docker tag {{ full_image }} {{ remote_tag }}
      when: status == "approved"

    - name: Push image to Harbor if approved
      community.docker.docker_image:
        name: "{{ remote_tag }}"
        push: yes
        source: local
      environment:
        DOCKER_CONFIG: "/home/hypervisoradmin/.docker"
      when: status == "approved"

    - name: Ensure backup directory exists
      file:
        path: "{{ backup_dir }}"
        state: directory

    - name: Save remote_tag to backup file
      lineinfile:
        path: "{{ backup_dir }}/tagged_images_{{ timestamp }}.txt"
        create: yes
        line: "{{ remote_tag }}"
      when: status == "approved"

    - name: Ensure log directory exists
      file:
        path: "{{ log_file | dirname }}"
        state: directory

    - name: Log image info to CSV
      lineinfile:
        path: "{{ log_file }}"
        create: yes
        line: >
          {{ lookup('pipe', "date +'%Y-%m-%d %H:%M:%S'") }},
          {{ image_name }},
          {{ tag_name }},
          {{ image_id }}
      when: status == "approved"
